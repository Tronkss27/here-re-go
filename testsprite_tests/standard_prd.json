{
  "meta": {
    "project": "SPOrTS Sports Bar Management Platform",
    "date": "2025-07-30",
    "prepared_by": "Software Development Manager"
  },
  "product_overview": "SPOrTS is a comprehensive sports bar management platform that connects venue owners and sports fans through an intelligent booking system tailored for sports match viewing experiences.",
  "core_goals": [
    "Provide a seamless multi-role authentication system with secure JWT-based access control",
    "Enable venue owners to onboard and manage their sports bars with multi-step registration and rich media uploads",
    "Allow sports fans to discover venues hosting specific matches and easily book tables",
    "Manage sports match data and announcements linked to venues",
    "Provide administrators with a robust dashboard for overseeing venues, users, and platform administration",
    "Ensure tenant isolation for venue-specific data segregation in a multi-tenant architecture",
    "Deliver a consistent, brand-aligned UI with accessibility and performance best practices"
  ],
  "key_features": [
    "User Authentication System with role-based access (client, venue_owner, admin)",
    "Multi-step Venue Owner Registration & Onboarding with photo uploads and facility selections",
    "Simplified Client Registration workflow",
    "Homepage featuring hot matches, day navigation, and venue discovery",
    "Comprehensive Venue Listing with search, filters, and map integration",
    "Venue Detail pages including photo carousel, booking form, and match announcements",
    "Match Management System with global match data and venue-specific announcements",
    "Admin Dashboard for platform and user management",
    "Multi-photo Upload System with image processing for venue galleries",
    "Booking System supporting match-specific table reservations",
    "Multi-Tenant Architecture ensuring data isolation per venue",
    "UI Component Library built with Shadcn/ui and Tailwind CSS",
    "Centralized API Client and Service Layer for frontend-backend communication",
    "Gazzetta dello Sport inspired color palette ensuring brand consistency"
  ],
  "user_flow_summary": [
    "Venue Owner Registration: multi-step form completion with email verification and onboarding",
    "Client Registration: simplified user signup and authentication",
    "Match Discovery on Homepage: browse and filter matches by day and venue",
    "Venue Search and Listing: search by location, apply filters, and view venue details",
    "Venue Detail and Booking Flow: explore venue info, view match announcements, submit booking form",
    "Admin Management: access dashboard for venue and user oversight, profile and account settings"
  ],
  "validation_criteria": [
    "Successful JWT authentication and role-based access control verification",
    "Completion rate >85% for core user flows (registration, booking)",
    "Form validation error rate below 5% for all registration and booking forms",
    "UI color palette adherence to specified Gazzetta colors verified via automated and manual audits",
    "Mobile responsiveness with minimum 44px touch targets confirmed across key screens",
    "Accessibility compliance with WCAG 2.1 AA standards, including keyboard navigation and screen reader support",
    "Performance benchmarks met: LCP <2.5s, FID <100ms, CLS <0.1",
    "Cross-browser compatibility confirmed on Chrome, Safari, Firefox, and Edge",
    "Admin features fully functional with user, venue, booking, and match management capabilities"
  ],
  "code_summary": {
    "tech_stack": [
      "JavaScript",
      "TypeScript",
      "React",
      "Node.js",
      "Express",
      "MongoDB",
      "Mongoose",
      "Tailwind CSS",
      "Vite",
      "Shadcn/ui",
      "JWT",
      "Docker"
    ],
    "features": [
      {
        "name": "User Authentication System",
        "description": "Complete JWT-based authentication with role-based access control (client, venue_owner, admin)",
        "files": [
          "backend/src/middlewares/auth.js",
          "backend/src/routes/auth.js",
          "frontend/src/contexts/AuthContext.jsx",
          "frontend/src/hooks/useAuth.js"
        ]
      },
      {
        "name": "Venue Registration & Onboarding",
        "description": "Multi-step venue owner registration with photo upload, facility selection, and business information",
        "files": [
          "frontend/src/pages/SportsRegister.jsx",
          "frontend/src/pages/admin/VenueOnboarding.tsx",
          "frontend/src/components/wizard-steps/StepBasicInfo.jsx",
          "frontend/src/components/wizard-steps/StepPhotos.tsx",
          "frontend/src/components/wizard-steps/StepFacilities.tsx",
          "backend/src/controllers/venueController.js"
        ]
      },
      {
        "name": "Client Registration",
        "description": "Simplified client registration flow for sports fans",
        "files": [
          "frontend/src/pages/ClientRegister.jsx",
          "frontend/src/pages/Register.jsx"
        ]
      },
      {
        "name": "Homepage & Match Discovery",
        "description": "Homepage with hot matches, day navigation, and venue discovery for specific matches",
        "files": [
          "frontend/src/pages/Home.jsx",
          "frontend/src/components/DayNavigation.jsx",
          "frontend/src/components/MatchCard.tsx",
          "frontend/src/services/hotMatchesService.js"
        ]
      },
      {
        "name": "Venue Listing & Search",
        "description": "Comprehensive venue listing with search, filters, and map integration",
        "files": [
          "frontend/src/pages/Locali.jsx",
          "frontend/src/components/VenueCard.tsx",
          "frontend/src/services/venuesService.js",
          "frontend/src/hooks/useVenues.js"
        ]
      },
      {
        "name": "Venue Detail & Booking",
        "description": "Single venue detail page with photo carousel, booking system, and match announcements",
        "files": [
          "frontend/src/pages/VenueDetail.tsx",
          "frontend/src/components/BookingForm.tsx",
          "backend/src/controllers/bookingController.js",
          "backend/src/models/Booking.js"
        ]
      },
      {
        "name": "Match Management System",
        "description": "Sports match data management with announcements and venue associations",
        "files": [
          "backend/src/models/GlobalMatch.js",
          "backend/src/models/MatchAnnouncement.js",
          "backend/src/controllers/matchAnnouncementController.js",
          "frontend/src/services/matchAnnouncementService.js"
        ]
      },
      {
        "name": "Admin Dashboard",
        "description": "Admin panel for venue management, user oversight, and platform administration",
        "files": [
          "frontend/src/pages/admin/AdminDashboard.tsx",
          "frontend/src/pages/admin/AdminLayout.tsx",
          "frontend/src/pages/admin/AccountSettings.tsx",
          "frontend/src/components/AdminSidebar.tsx"
        ]
      },
      {
        "name": "Photo Upload System",
        "description": "Multi-photo upload with image processing and venue gallery management",
        "files": [
          "backend/src/config/multerConfig.js",
          "backend/src/utils/imageUtils.js",
          "frontend/src/components/wizard-steps/StepPhotos.tsx"
        ]
      },
      {
        "name": "Booking System",
        "description": "Table reservation system for venues with match-specific bookings",
        "files": [
          "backend/src/models/Booking.js",
          "backend/src/controllers/bookingController.js",
          "frontend/src/components/BookingForm.tsx",
          "backend/src/services/bookingsService.js"
        ]
      },
      {
        "name": "Multi-Tenant Architecture",
        "description": "Tenant isolation system for venue-specific data segregation",
        "files": [
          "backend/src/middlewares/tenantMiddleware.js",
          "backend/src/utils/tenantQuery.js",
          "backend/src/models/Tenant.js"
        ]
      },
      {
        "name": "UI Component Library",
        "description": "Shadcn/ui based component system with Tailwind CSS styling",
        "files": [
          "frontend/src/components/ui/button.tsx",
          "frontend/src/components/ui/card.tsx",
          "frontend/src/components/ui/input.tsx",
          "frontend/src/components/ui/select.tsx",
          "frontend/src/index.css"
        ]
      },
      {
        "name": "Color Palette System",
        "description": "Gazzetta dello Sport inspired color system with CSS variables",
        "files": [
          "frontend/src/index.css",
          "frontend/tailwind.config.js"
        ]
      },
      {
        "name": "API Client & Services",
        "description": "Centralized API communication layer with service abstraction",
        "files": [
          "frontend/src/config/api.js",
          "frontend/src/services/apiClient.js",
          "frontend/src/services/venueService.js",
          "frontend/src/services/authService.js"
        ]
      },
      {
        "name": "Database Models",
        "description": "MongoDB models for venues, users, bookings, and matches",
        "files": [
          "backend/src/models/Venue.js",
          "backend/src/models/User.js",
          "backend/src/models/Booking.js",
          "backend/src/models/GlobalMatch.js",
          "backend/src/models/Tenant.js"
        ]
      }
    ]
  }
}
